#CI Template for node app,only for centos7 system 
#CI_JOB_NAME:  项目名称
#BUILD_DIR:   项目编译目录
#ARCHIVE_DIR: 归档目录,和BUILD_DIR一致即可,一般使用相对路径
#DEPLOY_DIR:  项目部署目录(部署机器)
#MAIL_LIST :  邮件列表,多个用户用逗号分割
variables:
  CI_JOB_NAME: projectname                                           #project name
  BUILD_DIR: $CI_PROJECT_DIR/$CI_PROJECT_NAME/build                  # build output dir, 通常为$CI_PROJECT_DIR/$CI_PROJECT_NAME/dist
  ARCHIVE_DIR: $CI_PROJECT_NAME/build                                # 一般和BUILD_DIR保持一致,使用相对路径,通常为$CI_PROJECT_NAME/dist
  
  DEPLOY_DIR: /usr/local/webapps/projectname                         # project depploy dir
  MAIL_LIST:  user@company.com.cn                                    # mail list, mulit user separation with commas, notify user about deploy status 
  NODE_MODULES_PATH:  $CI_PROJECT_DIR/$CI_PROJECT_NAME/node_modules   #node_module path
                                                                       
stages:

.deploy: &deploy
  - >
    cd $CI_PROJECT_DIR/ansible &&
    ansible-playbook deploy.yml
    --diff 
    -i "$ANSIBLE_INVENTORY" 
    -l "$ANSIBLE_SUBSET" 
    -e BUILD_PATH="\"$BUILD_DIR\""
    -e CI_COMMIT_REF_NAME="\"$CI_COMMIT_REF_NAME\""
    -e CI_COMMIT_SHA="\"$CI_COMMIT_SHA\""
    -e CI_ENVIRONMENT_NAME="\"$CI_ENVIRONMENT_NAME\""
    -e CI_PIPELINE_ID="\"$CI_PIPELINE_ID\""
    -e CI_PROJECT_URL="\"$CI_PROJECT_URL\""
    -e CI_RUNNER_DESCRIPTION="\"$CI_RUNNER_DESCRIPTION\""
    -e CI_SERVER_NAME="\"$CI_SERVER_NAME\""
    -e GITLAB_USER_EMAIL="\"$GITLAB_USER_EMAIL\""
    -e GITLAB_USER_ID="\"$GITLAB_USER_ID\""
    -e GIT_LAST_COMMIT_MSG="\"`cat $CI_PROJECT_DIR/$CI_PROJECT_NAME/.gitlastcommitmsg`\""
    -e DEPLOY_DIR="\"$DEPLOY_DIR\""
    -e CI_JOB_NAME="\"$CI_JOB_NAME\""
    -e MAIL_LIST="\"$MAIL_LIST\""
    
cache:
  key: "$CI_PROJECT_ID.$CI_COMMIT_REF_NAME.$CI_JOB_NAME"
  paths:
    - $NODE_MODULES_PATH
    - dist/

stages:
  - build
  - test
  - deploy

before_script:
  - echo "Building Project..."
  - cd $CI_PROJECT_DIR/$CI_PROJECT_NAME&&git log -1 --pretty=%B > $CI_PROJECT_DIR/$CI_PROJECT_NAME/.gitlastcommitmsg

after_script:
  - echo "Project has been built."

build_job:
  stage: build
  artifacts:
    expire_in: 1 day
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    paths:
      - $ARCHIVE_DIR
  script:
    - cd $CI_PROJECT_DIR/$CI_PROJECT_NAME
    - yarn install
    - yarn run build
  except:
    - tags
    
do_dev_deploy:
  stage: deploy
  only:
    - dev
  tags:
    - node
  script: *deploy
  when: manual
  variables:
    GIT_STRATEGY: none
    ANSIBLE_INVENTORY: staging
    ANSIBLE_SUBSET: all
  
do_prod_deploy:
  stage: deploy
  only:
    - master
  tags:
    - node
  environment:
    name: production
  allow_failure: false
  script: *deploy
  when: manual
  variables:
    GIT_STRATEGY: none
    ANSIBLE_INVENTORY: product
    ANSIBLE_SUBSET: all
